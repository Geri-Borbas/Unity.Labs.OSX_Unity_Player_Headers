//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct InputEvent {
    unsigned long long _field1;
    struct Vector2f _field2;
    struct Vector2f _field3;
    int _field4;
    int _field5;
    float _field6;
    int _field7;
    unsigned short _field8;
    unsigned short _field9;
    int _field10;
    char *_field11;
    _Bool _field12;
};

struct Mutex {
    struct PlatformMutex m_Mutex;
};

struct PlatformMutex {
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } mutex;
};

struct Resolution;

struct Vector2f {
    float _field1;
    float _field2;
};

struct _Alloc_hider {
    char *_field1;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _Vector_impl {
    struct Resolution *_field1;
    struct Resolution *_field2;
    struct Resolution *_field3;
};

struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct _Alloc_hider _field1;
};

struct vector<ScreenManager::Resolution, std::allocator<ScreenManager::Resolution>> {
    struct _Vector_impl _field1;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct _Alloc_hider _field1;
} basic_string_1cdf7af0;

